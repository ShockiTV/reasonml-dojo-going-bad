// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Fetcher$MyProjectName = require("./Fetcher.bs.js");
var Geography$MyProjectName = require("./Geography.bs.js");
var Geographies$MyProjectName = require("./Geographies.bs.js");
var ComposableMap$MyProjectName = require("./ComposableMap.bs.js");
var ZoomableGroup$MyProjectName = require("./ZoomableGroup.bs.js");

var component = ReasonReact.reducerComponent("DataFetch");

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              var fetchCallback = function (locations) {
                return Curry._1(self[/* send */3], /* Load */[locations]);
              };
              return Fetcher$MyProjectName.fetchGet("https://immense-river-25513.herokuapp.com/locations", fetchCallback);
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return ReasonReact.element(/* None */0, /* None */0, ComposableMap$MyProjectName.make(1000, 1000, /* array */[ReasonReact.element(/* None */0, /* None */0, ZoomableGroup$MyProjectName.make(/* array */[ReasonReact.element(/* None */0, /* None */0, Geographies$MyProjectName.make("world-50m.json", (function (geographies, projection) {
                                                    return geographies.map((function (geography, index) {
                                                                  return ReasonReact.element(/* Some */[String(index)], /* None */0, Geography$MyProjectName.make(geography, projection, /* array */[]));
                                                                }));
                                                  })))]))]));
            }),
          /* initialState */(function () {
              return /* record */[/* locations : array */[]];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, _) {
              return /* Update */Block.__(0, [/* record */[/* locations */action[0]]]);
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
